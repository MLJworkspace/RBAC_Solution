/*
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mapping.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MappingGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class MappingModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mapping.Mapping.MappingModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMappingModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSourceMetamodelsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceMetamodelsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourceMetamodelsSourceMetamodelParserRuleCall_4_0 = (RuleCall)cSourceMetamodelsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSourceMetamodelsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cSourceMetamodelsSourceMetamodelParserRuleCall_5_1_0 = (RuleCall)cSourceMetamodelsAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cMainSourceMetamodelKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cMainSourceMetamodelAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cMainSourceMetamodelSourceMetamodelCrossReference_7_1_0 = (CrossReference)cMainSourceMetamodelAssignment_7_1.eContents().get(0);
		private final RuleCall cMainSourceMetamodelSourceMetamodelQualifiedNameParserRuleCall_7_1_0_1 = (RuleCall)cMainSourceMetamodelSourceMetamodelCrossReference_7_1_0.eContents().get(1);
		private final Keyword cTargetMetamodelsKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cTargetMetamodelsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cTargetMetamodelsTargetMetamodelParserRuleCall_10_0 = (RuleCall)cTargetMetamodelsAssignment_10.eContents().get(0);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cCommaKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cTargetMetamodelsAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cTargetMetamodelsTargetMetamodelParserRuleCall_11_1_0 = (RuleCall)cTargetMetamodelsAssignment_11_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cMappingRulesKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Assignment cRulesAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cRulesMappingRuleParserRuleCall_13_2_0 = (RuleCall)cRulesAssignment_13_2.eContents().get(0);
		private final Group cGroup_13_3 = (Group)cGroup_13.eContents().get(3);
		private final Keyword cSemicolonKeyword_13_3_0 = (Keyword)cGroup_13_3.eContents().get(0);
		private final Assignment cRulesAssignment_13_3_1 = (Assignment)cGroup_13_3.eContents().get(1);
		private final RuleCall cRulesMappingRuleParserRuleCall_13_3_1_0 = (RuleCall)cRulesAssignment_13_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13_4 = (Keyword)cGroup_13.eContents().get(4);
		
		//MappingModel returns MappingModel:
		//    'MappingModel' name= STRING
		//    'SourceMetamodels' '{' SourceMetamodels+=SourceMetamodel ( "," SourceMetamodels+=SourceMetamodel)* '}'
		//    ('MainSourceMetamodel' MainSourceMetamodel=[SourceMetamodel|QualifiedName])?
		//    'TargetMetamodels' '{' TargetMetamodels+=TargetMetamodel ( "," TargetMetamodels+=TargetMetamodel)* '}'
		//    ('MappingRules''{' Rules+=MappingRule ( ";" Rules+=MappingRule)* '}' )?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'MappingModel' name= STRING
		//'SourceMetamodels' '{' SourceMetamodels+=SourceMetamodel ( "," SourceMetamodels+=SourceMetamodel)* '}'
		//('MainSourceMetamodel' MainSourceMetamodel=[SourceMetamodel|QualifiedName])?
		//'TargetMetamodels' '{' TargetMetamodels+=TargetMetamodel ( "," TargetMetamodels+=TargetMetamodel)* '}'
		//('MappingRules''{' Rules+=MappingRule ( ";" Rules+=MappingRule)* '}' )?
		public Group getGroup() { return cGroup; }
		
		//'MappingModel'
		public Keyword getMappingModelKeyword_0() { return cMappingModelKeyword_0; }
		
		//name= STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//'SourceMetamodels'
		public Keyword getSourceMetamodelsKeyword_2() { return cSourceMetamodelsKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//SourceMetamodels+=SourceMetamodel
		public Assignment getSourceMetamodelsAssignment_4() { return cSourceMetamodelsAssignment_4; }
		
		//SourceMetamodel
		public RuleCall getSourceMetamodelsSourceMetamodelParserRuleCall_4_0() { return cSourceMetamodelsSourceMetamodelParserRuleCall_4_0; }
		
		//( "," SourceMetamodels+=SourceMetamodel)*
		public Group getGroup_5() { return cGroup_5; }
		
		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//SourceMetamodels+=SourceMetamodel
		public Assignment getSourceMetamodelsAssignment_5_1() { return cSourceMetamodelsAssignment_5_1; }
		
		//SourceMetamodel
		public RuleCall getSourceMetamodelsSourceMetamodelParserRuleCall_5_1_0() { return cSourceMetamodelsSourceMetamodelParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
		
		//('MainSourceMetamodel' MainSourceMetamodel=[SourceMetamodel|QualifiedName])?
		public Group getGroup_7() { return cGroup_7; }
		
		//'MainSourceMetamodel'
		public Keyword getMainSourceMetamodelKeyword_7_0() { return cMainSourceMetamodelKeyword_7_0; }
		
		//MainSourceMetamodel=[SourceMetamodel|QualifiedName]
		public Assignment getMainSourceMetamodelAssignment_7_1() { return cMainSourceMetamodelAssignment_7_1; }
		
		//[SourceMetamodel|QualifiedName]
		public CrossReference getMainSourceMetamodelSourceMetamodelCrossReference_7_1_0() { return cMainSourceMetamodelSourceMetamodelCrossReference_7_1_0; }
		
		//QualifiedName
		public RuleCall getMainSourceMetamodelSourceMetamodelQualifiedNameParserRuleCall_7_1_0_1() { return cMainSourceMetamodelSourceMetamodelQualifiedNameParserRuleCall_7_1_0_1; }
		
		//'TargetMetamodels'
		public Keyword getTargetMetamodelsKeyword_8() { return cTargetMetamodelsKeyword_8; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }
		
		//TargetMetamodels+=TargetMetamodel
		public Assignment getTargetMetamodelsAssignment_10() { return cTargetMetamodelsAssignment_10; }
		
		//TargetMetamodel
		public RuleCall getTargetMetamodelsTargetMetamodelParserRuleCall_10_0() { return cTargetMetamodelsTargetMetamodelParserRuleCall_10_0; }
		
		//( "," TargetMetamodels+=TargetMetamodel)*
		public Group getGroup_11() { return cGroup_11; }
		
		//","
		public Keyword getCommaKeyword_11_0() { return cCommaKeyword_11_0; }
		
		//TargetMetamodels+=TargetMetamodel
		public Assignment getTargetMetamodelsAssignment_11_1() { return cTargetMetamodelsAssignment_11_1; }
		
		//TargetMetamodel
		public RuleCall getTargetMetamodelsTargetMetamodelParserRuleCall_11_1_0() { return cTargetMetamodelsTargetMetamodelParserRuleCall_11_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
		
		//('MappingRules''{' Rules+=MappingRule ( ";" Rules+=MappingRule)* '}' )?
		public Group getGroup_13() { return cGroup_13; }
		
		//'MappingRules'
		public Keyword getMappingRulesKeyword_13_0() { return cMappingRulesKeyword_13_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_13_1() { return cLeftCurlyBracketKeyword_13_1; }
		
		//Rules+=MappingRule
		public Assignment getRulesAssignment_13_2() { return cRulesAssignment_13_2; }
		
		//MappingRule
		public RuleCall getRulesMappingRuleParserRuleCall_13_2_0() { return cRulesMappingRuleParserRuleCall_13_2_0; }
		
		//( ";" Rules+=MappingRule)*
		public Group getGroup_13_3() { return cGroup_13_3; }
		
		//";"
		public Keyword getSemicolonKeyword_13_3_0() { return cSemicolonKeyword_13_3_0; }
		
		//Rules+=MappingRule
		public Assignment getRulesAssignment_13_3_1() { return cRulesAssignment_13_3_1; }
		
		//MappingRule
		public RuleCall getRulesMappingRuleParserRuleCall_13_3_1_0() { return cRulesMappingRuleParserRuleCall_13_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13_4() { return cRightCurlyBracketKeyword_13_4; }
	}
	public class SourceMetamodelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mapping.Mapping.SourceMetamodel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSourceMetamodelAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cModelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cModelEPackageCrossReference_2_0 = (CrossReference)cModelAssignment_2.eContents().get(0);
		private final RuleCall cModelEPackageEStringParserRuleCall_2_0_1 = (RuleCall)cModelEPackageCrossReference_2_0.eContents().get(1);
		
		//SourceMetamodel returns SourceMetamodel:
		//    {SourceMetamodel}
		//    name=STRING?
		//        (model=[ecore::EPackage|EString])
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{SourceMetamodel}
		//name=STRING?
		//    (model=[ecore::EPackage|EString])
		public Group getGroup() { return cGroup; }
		
		//{SourceMetamodel}
		public Action getSourceMetamodelAction_0() { return cSourceMetamodelAction_0; }
		
		//name=STRING?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//(model=[ecore::EPackage|EString])
		public Assignment getModelAssignment_2() { return cModelAssignment_2; }
		
		//[ecore::EPackage|EString]
		public CrossReference getModelEPackageCrossReference_2_0() { return cModelEPackageCrossReference_2_0; }
		
		//EString
		public RuleCall getModelEPackageEStringParserRuleCall_2_0_1() { return cModelEPackageEStringParserRuleCall_2_0_1; }
	}
	public class TargetMetamodelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mapping.Mapping.TargetMetamodel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTargetMetamodelAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cModelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cModelEPackageCrossReference_2_0 = (CrossReference)cModelAssignment_2.eContents().get(0);
		private final RuleCall cModelEPackageEStringParserRuleCall_2_0_1 = (RuleCall)cModelEPackageCrossReference_2_0.eContents().get(1);
		
		//TargetMetamodel returns TargetMetamodel:
		//    {TargetMetamodel}
		//    name=STRING?
		//        (model=[ecore::EPackage|EString])
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{TargetMetamodel}
		//name=STRING?
		//    (model=[ecore::EPackage|EString])
		public Group getGroup() { return cGroup; }
		
		//{TargetMetamodel}
		public Action getTargetMetamodelAction_0() { return cTargetMetamodelAction_0; }
		
		//name=STRING?
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//(model=[ecore::EPackage|EString])
		public Assignment getModelAssignment_2() { return cModelAssignment_2; }
		
		//[ecore::EPackage|EString]
		public CrossReference getModelEPackageCrossReference_2_0() { return cModelEPackageCrossReference_2_0; }
		
		//EString
		public RuleCall getModelEPackageEStringParserRuleCall_2_0_1() { return cModelEPackageEStringParserRuleCall_2_0_1; }
	}
	public class MappingRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mapping.Mapping.MappingRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMappingRuleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMappingRuleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cVarAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVarVariableDeclarationParserRuleCall_3_0 = (RuleCall)cVarAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cIdentifierKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cIdentifierAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cIdentifierSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cIdentifierAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Alternatives cAlternatives_5_0 = (Alternatives)cGroup_5.eContents().get(0);
		private final Group cGroup_5_0_0 = (Group)cAlternatives_5_0.eContents().get(0);
		private final Keyword cSourceKeyword_5_0_0_0 = (Keyword)cGroup_5_0_0.eContents().get(0);
		private final Assignment cSourceAssignment_5_0_0_1 = (Assignment)cGroup_5_0_0.eContents().get(1);
		private final CrossReference cSourceEObjectCrossReference_5_0_0_1_0 = (CrossReference)cSourceAssignment_5_0_0_1.eContents().get(0);
		private final RuleCall cSourceEObjectQualifiedNameParserRuleCall_5_0_0_1_0_1 = (RuleCall)cSourceEObjectCrossReference_5_0_0_1_0.eContents().get(1);
		private final Assignment cVariableAssignment_5_0_1 = (Assignment)cAlternatives_5_0.eContents().get(1);
		private final CrossReference cVariableVariableDeclarationCrossReference_5_0_1_0 = (CrossReference)cVariableAssignment_5_0_1.eContents().get(0);
		private final RuleCall cVariableVariableDeclarationIDTerminalRuleCall_5_0_1_0_1 = (RuleCall)cVariableVariableDeclarationCrossReference_5_0_1_0.eContents().get(1);
		private final Group cGroup_5_1 = (Group)cGroup_5.eContents().get(1);
		private final Keyword cColonColonKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cEEnumLiteralAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final CrossReference cEEnumLiteralEEnumLiteralCrossReference_5_1_1_0 = (CrossReference)cEEnumLiteralAssignment_5_1_1.eContents().get(0);
		private final RuleCall cEEnumLiteralEEnumLiteralIDTerminalRuleCall_5_1_1_0_1 = (RuleCall)cEEnumLiteralEEnumLiteralCrossReference_5_1_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cTargetKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTargetAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cTargetEObjectCrossReference_6_1_0 = (CrossReference)cTargetAssignment_6_1.eContents().get(0);
		private final RuleCall cTargetEObjectQualifiedNameParserRuleCall_6_1_0_1 = (RuleCall)cTargetEObjectCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cOperatorKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cOperatorAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cOperatorOperatorEnumRuleCall_7_1_0 = (RuleCall)cOperatorAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cConditionKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cConditionAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cConditionSTRINGTerminalRuleCall_8_1_0 = (RuleCall)cConditionAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommentKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cCommentAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_9_1_0 = (RuleCall)cCommentAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cLeftCurlyBracketKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cChildRulesAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cChildRulesMappingRuleParserRuleCall_10_1_0 = (RuleCall)cChildRulesAssignment_10_1.eContents().get(0);
		private final Group cGroup_10_2 = (Group)cGroup_10.eContents().get(2);
		private final Keyword cSemicolonKeyword_10_2_0 = (Keyword)cGroup_10_2.eContents().get(0);
		private final Assignment cChildRulesAssignment_10_2_1 = (Assignment)cGroup_10_2.eContents().get(1);
		private final RuleCall cChildRulesMappingRuleParserRuleCall_10_2_1_0 = (RuleCall)cChildRulesAssignment_10_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_3 = (Keyword)cGroup_10.eContents().get(3);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cLeftCurlyBracketKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cChildHelpersAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cChildHelpersHelperStatementParserRuleCall_11_1_0 = (RuleCall)cChildHelpersAssignment_11_1.eContents().get(0);
		private final Group cGroup_11_2 = (Group)cGroup_11.eContents().get(2);
		private final Keyword cSemicolonKeyword_11_2_0 = (Keyword)cGroup_11_2.eContents().get(0);
		private final Assignment cChildHelpersAssignment_11_2_1 = (Assignment)cGroup_11_2.eContents().get(1);
		private final RuleCall cChildHelpersHelperStatementParserRuleCall_11_2_1_0 = (RuleCall)cChildHelpersAssignment_11_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11_3 = (Keyword)cGroup_11.eContents().get(3);
		
		//MappingRule returns MappingRule:
		//    {MappingRule}
		//    ('MappingRule')?
		//    name=STRING?
		//         var = VariableDeclaration?
		//        ('identifier' identifier = STRING)?
		//        ((('source' (source=[ecore::EObject|QualifiedName]) | variable=[VariableDeclaration|ID])) ('::' EEnumLiteral=[ecore::EEnumLiteral])?)?
		//        ('target' target=[ecore::EObject|QualifiedName])?
		//        ('operator' operator=Operator)?
		//        ('condition' condition=STRING)?
		//        ('comment' comment=EString)?
		//        ('{' ChildRules+=MappingRule ( ";" ChildRules+=MappingRule)* '}' )?
		//        ('{' ChildHelpers+=HelperStatement ( ";" ChildHelpers+=HelperStatement)* '}' )?
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{MappingRule}
		//('MappingRule')?
		//name=STRING?
		//     var = VariableDeclaration?
		//    ('identifier' identifier = STRING)?
		//    ((('source' (source=[ecore::EObject|QualifiedName]) | variable=[VariableDeclaration|ID])) ('::' EEnumLiteral=[ecore::EEnumLiteral])?)?
		//    ('target' target=[ecore::EObject|QualifiedName])?
		//    ('operator' operator=Operator)?
		//    ('condition' condition=STRING)?
		//    ('comment' comment=EString)?
		//    ('{' ChildRules+=MappingRule ( ";" ChildRules+=MappingRule)* '}' )?
		//    ('{' ChildHelpers+=HelperStatement ( ";" ChildHelpers+=HelperStatement)* '}' )?
		public Group getGroup() { return cGroup; }
		
		//{MappingRule}
		public Action getMappingRuleAction_0() { return cMappingRuleAction_0; }
		
		//('MappingRule')?
		public Keyword getMappingRuleKeyword_1() { return cMappingRuleKeyword_1; }
		
		//name=STRING?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//var = VariableDeclaration?
		public Assignment getVarAssignment_3() { return cVarAssignment_3; }
		
		//VariableDeclaration
		public RuleCall getVarVariableDeclarationParserRuleCall_3_0() { return cVarVariableDeclarationParserRuleCall_3_0; }
		
		//('identifier' identifier = STRING)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'identifier'
		public Keyword getIdentifierKeyword_4_0() { return cIdentifierKeyword_4_0; }
		
		//identifier = STRING
		public Assignment getIdentifierAssignment_4_1() { return cIdentifierAssignment_4_1; }
		
		//STRING
		public RuleCall getIdentifierSTRINGTerminalRuleCall_4_1_0() { return cIdentifierSTRINGTerminalRuleCall_4_1_0; }
		
		//((('source' (source=[ecore::EObject|QualifiedName]) | variable=[VariableDeclaration|ID])) ('::' EEnumLiteral=[ecore::EEnumLiteral])?)?
		public Group getGroup_5() { return cGroup_5; }
		
		//(('source' (source=[ecore::EObject|QualifiedName]) | variable=[VariableDeclaration|ID]))
		public Alternatives getAlternatives_5_0() { return cAlternatives_5_0; }
		
		//'source' (source=[ecore::EObject|QualifiedName])
		public Group getGroup_5_0_0() { return cGroup_5_0_0; }
		
		//'source'
		public Keyword getSourceKeyword_5_0_0_0() { return cSourceKeyword_5_0_0_0; }
		
		//(source=[ecore::EObject|QualifiedName])
		public Assignment getSourceAssignment_5_0_0_1() { return cSourceAssignment_5_0_0_1; }
		
		//[ecore::EObject|QualifiedName]
		public CrossReference getSourceEObjectCrossReference_5_0_0_1_0() { return cSourceEObjectCrossReference_5_0_0_1_0; }
		
		//QualifiedName
		public RuleCall getSourceEObjectQualifiedNameParserRuleCall_5_0_0_1_0_1() { return cSourceEObjectQualifiedNameParserRuleCall_5_0_0_1_0_1; }
		
		//variable=[VariableDeclaration|ID]
		public Assignment getVariableAssignment_5_0_1() { return cVariableAssignment_5_0_1; }
		
		//[VariableDeclaration|ID]
		public CrossReference getVariableVariableDeclarationCrossReference_5_0_1_0() { return cVariableVariableDeclarationCrossReference_5_0_1_0; }
		
		//ID
		public RuleCall getVariableVariableDeclarationIDTerminalRuleCall_5_0_1_0_1() { return cVariableVariableDeclarationIDTerminalRuleCall_5_0_1_0_1; }
		
		//('::' EEnumLiteral=[ecore::EEnumLiteral])?
		public Group getGroup_5_1() { return cGroup_5_1; }
		
		//'::'
		public Keyword getColonColonKeyword_5_1_0() { return cColonColonKeyword_5_1_0; }
		
		//EEnumLiteral=[ecore::EEnumLiteral]
		public Assignment getEEnumLiteralAssignment_5_1_1() { return cEEnumLiteralAssignment_5_1_1; }
		
		//[ecore::EEnumLiteral]
		public CrossReference getEEnumLiteralEEnumLiteralCrossReference_5_1_1_0() { return cEEnumLiteralEEnumLiteralCrossReference_5_1_1_0; }
		
		//ID
		public RuleCall getEEnumLiteralEEnumLiteralIDTerminalRuleCall_5_1_1_0_1() { return cEEnumLiteralEEnumLiteralIDTerminalRuleCall_5_1_1_0_1; }
		
		//('target' target=[ecore::EObject|QualifiedName])?
		public Group getGroup_6() { return cGroup_6; }
		
		//'target'
		public Keyword getTargetKeyword_6_0() { return cTargetKeyword_6_0; }
		
		//target=[ecore::EObject|QualifiedName]
		public Assignment getTargetAssignment_6_1() { return cTargetAssignment_6_1; }
		
		//[ecore::EObject|QualifiedName]
		public CrossReference getTargetEObjectCrossReference_6_1_0() { return cTargetEObjectCrossReference_6_1_0; }
		
		//QualifiedName
		public RuleCall getTargetEObjectQualifiedNameParserRuleCall_6_1_0_1() { return cTargetEObjectQualifiedNameParserRuleCall_6_1_0_1; }
		
		//('operator' operator=Operator)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'operator'
		public Keyword getOperatorKeyword_7_0() { return cOperatorKeyword_7_0; }
		
		//operator=Operator
		public Assignment getOperatorAssignment_7_1() { return cOperatorAssignment_7_1; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_7_1_0() { return cOperatorOperatorEnumRuleCall_7_1_0; }
		
		//('condition' condition=STRING)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'condition'
		public Keyword getConditionKeyword_8_0() { return cConditionKeyword_8_0; }
		
		//condition=STRING
		public Assignment getConditionAssignment_8_1() { return cConditionAssignment_8_1; }
		
		//STRING
		public RuleCall getConditionSTRINGTerminalRuleCall_8_1_0() { return cConditionSTRINGTerminalRuleCall_8_1_0; }
		
		//('comment' comment=EString)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'comment'
		public Keyword getCommentKeyword_9_0() { return cCommentKeyword_9_0; }
		
		//comment=EString
		public Assignment getCommentAssignment_9_1() { return cCommentAssignment_9_1; }
		
		//EString
		public RuleCall getCommentEStringParserRuleCall_9_1_0() { return cCommentEStringParserRuleCall_9_1_0; }
		
		//('{' ChildRules+=MappingRule ( ";" ChildRules+=MappingRule)* '}' )?
		public Group getGroup_10() { return cGroup_10; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10_0() { return cLeftCurlyBracketKeyword_10_0; }
		
		//ChildRules+=MappingRule
		public Assignment getChildRulesAssignment_10_1() { return cChildRulesAssignment_10_1; }
		
		//MappingRule
		public RuleCall getChildRulesMappingRuleParserRuleCall_10_1_0() { return cChildRulesMappingRuleParserRuleCall_10_1_0; }
		
		//( ";" ChildRules+=MappingRule)*
		public Group getGroup_10_2() { return cGroup_10_2; }
		
		//";"
		public Keyword getSemicolonKeyword_10_2_0() { return cSemicolonKeyword_10_2_0; }
		
		//ChildRules+=MappingRule
		public Assignment getChildRulesAssignment_10_2_1() { return cChildRulesAssignment_10_2_1; }
		
		//MappingRule
		public RuleCall getChildRulesMappingRuleParserRuleCall_10_2_1_0() { return cChildRulesMappingRuleParserRuleCall_10_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10_3() { return cRightCurlyBracketKeyword_10_3; }
		
		//('{' ChildHelpers+=HelperStatement ( ";" ChildHelpers+=HelperStatement)* '}' )?
		public Group getGroup_11() { return cGroup_11; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11_0() { return cLeftCurlyBracketKeyword_11_0; }
		
		//ChildHelpers+=HelperStatement
		public Assignment getChildHelpersAssignment_11_1() { return cChildHelpersAssignment_11_1; }
		
		//HelperStatement
		public RuleCall getChildHelpersHelperStatementParserRuleCall_11_1_0() { return cChildHelpersHelperStatementParserRuleCall_11_1_0; }
		
		//( ";" ChildHelpers+=HelperStatement)*
		public Group getGroup_11_2() { return cGroup_11_2; }
		
		//";"
		public Keyword getSemicolonKeyword_11_2_0() { return cSemicolonKeyword_11_2_0; }
		
		//ChildHelpers+=HelperStatement
		public Assignment getChildHelpersAssignment_11_2_1() { return cChildHelpersAssignment_11_2_1; }
		
		//HelperStatement
		public RuleCall getChildHelpersHelperStatementParserRuleCall_11_2_1_0() { return cChildHelpersHelperStatementParserRuleCall_11_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11_3() { return cRightCurlyBracketKeyword_11_3; }
	}
	public class HelperStatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mapping.Mapping.HelperStatement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHelperStatementAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHelperStatementKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cStatementKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cStatementAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cStatementSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cStatementAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cChildRulesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cChildRulesMappingRuleParserRuleCall_3_1_0 = (RuleCall)cChildRulesAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cChildRulesAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cChildRulesMappingRuleParserRuleCall_3_2_1_0 = (RuleCall)cChildRulesAssignment_3_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cChildHelpersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cChildHelpersHelperStatementParserRuleCall_4_1_0 = (RuleCall)cChildHelpersAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cChildHelpersAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cChildHelpersHelperStatementParserRuleCall_4_2_1_0 = (RuleCall)cChildHelpersAssignment_4_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		
		//HelperStatement returns HelperStatement:
		//{HelperStatement}
		//('HelperStatement')?
		//    ('statement' statement=STRING)
		//    ('{' ChildRules+=MappingRule ( "," ChildRules+=MappingRule)* '}' )?
		//    ('{' ChildHelpers+=HelperStatement ( "," ChildHelpers+=HelperStatement)* '}' )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{HelperStatement}
		//('HelperStatement')?
		//    ('statement' statement=STRING)
		//    ('{' ChildRules+=MappingRule ( "," ChildRules+=MappingRule)* '}' )?
		//    ('{' ChildHelpers+=HelperStatement ( "," ChildHelpers+=HelperStatement)* '}' )?
		public Group getGroup() { return cGroup; }
		
		//{HelperStatement}
		public Action getHelperStatementAction_0() { return cHelperStatementAction_0; }
		
		//('HelperStatement')?
		public Keyword getHelperStatementKeyword_1() { return cHelperStatementKeyword_1; }
		
		//('statement' statement=STRING)
		public Group getGroup_2() { return cGroup_2; }
		
		//'statement'
		public Keyword getStatementKeyword_2_0() { return cStatementKeyword_2_0; }
		
		//statement=STRING
		public Assignment getStatementAssignment_2_1() { return cStatementAssignment_2_1; }
		
		//STRING
		public RuleCall getStatementSTRINGTerminalRuleCall_2_1_0() { return cStatementSTRINGTerminalRuleCall_2_1_0; }
		
		//('{' ChildRules+=MappingRule ( "," ChildRules+=MappingRule)* '}' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }
		
		//ChildRules+=MappingRule
		public Assignment getChildRulesAssignment_3_1() { return cChildRulesAssignment_3_1; }
		
		//MappingRule
		public RuleCall getChildRulesMappingRuleParserRuleCall_3_1_0() { return cChildRulesMappingRuleParserRuleCall_3_1_0; }
		
		//( "," ChildRules+=MappingRule)*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//ChildRules+=MappingRule
		public Assignment getChildRulesAssignment_3_2_1() { return cChildRulesAssignment_3_2_1; }
		
		//MappingRule
		public RuleCall getChildRulesMappingRuleParserRuleCall_3_2_1_0() { return cChildRulesMappingRuleParserRuleCall_3_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }
		
		//('{' ChildHelpers+=HelperStatement ( "," ChildHelpers+=HelperStatement)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }
		
		//ChildHelpers+=HelperStatement
		public Assignment getChildHelpersAssignment_4_1() { return cChildHelpersAssignment_4_1; }
		
		//HelperStatement
		public RuleCall getChildHelpersHelperStatementParserRuleCall_4_1_0() { return cChildHelpersHelperStatementParserRuleCall_4_1_0; }
		
		//( "," ChildHelpers+=HelperStatement)*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//ChildHelpers+=HelperStatement
		public Assignment getChildHelpersAssignment_4_2_1() { return cChildHelpersAssignment_4_2_1; }
		
		//HelperStatement
		public RuleCall getChildHelpersHelperStatementParserRuleCall_4_2_1_0() { return cChildHelpersHelperStatementParserRuleCall_4_2_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mapping.Mapping.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mapping.Mapping.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValidIDParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cValidIDParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//    ValidID ('.' ValidID)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//ValidID ('.' ValidID)*
		public Group getGroup() { return cGroup; }
		
		//ValidID
		public RuleCall getValidIDParserRuleCall_0() { return cValidIDParserRuleCall_0; }
		
		//('.' ValidID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ValidID
		public RuleCall getValidIDParserRuleCall_1_1() { return cValidIDParserRuleCall_1_1; }
	}
	public class MetamodelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mapping.Mapping.Metamodel");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSourceMetamodelParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTargetMetamodelParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Metamodel returns Metamodel:
		//    SourceMetamodel | TargetMetamodel
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//SourceMetamodel | TargetMetamodel
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SourceMetamodel
		public RuleCall getSourceMetamodelParserRuleCall_0() { return cSourceMetamodelParserRuleCall_0; }
		
		//TargetMetamodel
		public RuleCall getTargetMetamodelParserRuleCall_1() { return cTargetMetamodelParserRuleCall_1; }
	}
	public class ValidIDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mapping.Mapping.ValidID");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEStringParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cKEYWORDParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ValidID: EString | KEYWORD;
		@Override public ParserRule getRule() { return rule; }
		
		//EString | KEYWORD
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EString
		public RuleCall getEStringParserRuleCall_0() { return cEStringParserRuleCall_0; }
		
		//KEYWORD
		public RuleCall getKEYWORDParserRuleCall_1() { return cKEYWORDParserRuleCall_1; }
	}
	public class KEYWORDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mapping.Mapping.KEYWORD");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cSourceKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cTargetKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//KEYWORD: 'source'|'target';
		@Override public ParserRule getRule() { return rule; }
		
		//'source'|'target'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'source'
		public Keyword getSourceKeyword_0() { return cSourceKeyword_0; }
		
		//'target'
		public Keyword getTargetKeyword_1() { return cTargetKeyword_1; }
	}
	public class VariableDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mapping.Mapping.VariableDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVariableDeclarationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cVarKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueSTRINGTerminalRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//VariableDeclaration:
		//    {VariableDeclaration}
		//    'var' name=ID value=STRING
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{VariableDeclaration}
		//'var' name=ID value=STRING
		public Group getGroup() { return cGroup; }
		
		//{VariableDeclaration}
		public Action getVariableDeclarationAction_0() { return cVariableDeclarationAction_0; }
		
		//'var'
		public Keyword getVarKeyword_1() { return cVarKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//value=STRING
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_3_0() { return cValueSTRINGTerminalRuleCall_3_0; }
	}
	
	public class OperatorElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mapping.Mapping.Operator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAssignEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAssignAssignKeyword_0_0 = (Keyword)cAssignEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAddEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAddAddKeyword_1_0 = (Keyword)cAddEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Operator returns Operator:
		//            assign = 'assign' | add = 'add';
		public EnumRule getRule() { return rule; }
		
		//assign = 'assign' | add = 'add'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//assign = 'assign'
		public EnumLiteralDeclaration getAssignEnumLiteralDeclaration_0() { return cAssignEnumLiteralDeclaration_0; }
		
		//'assign'
		public Keyword getAssignAssignKeyword_0_0() { return cAssignAssignKeyword_0_0; }
		
		//add = 'add'
		public EnumLiteralDeclaration getAddEnumLiteralDeclaration_1() { return cAddEnumLiteralDeclaration_1; }
		
		//'add'
		public Keyword getAddAddKeyword_1_0() { return cAddAddKeyword_1_0; }
	}
	
	private final MappingModelElements pMappingModel;
	private final SourceMetamodelElements pSourceMetamodel;
	private final TargetMetamodelElements pTargetMetamodel;
	private final MappingRuleElements pMappingRule;
	private final HelperStatementElements pHelperStatement;
	private final OperatorElements eOperator;
	private final EStringElements pEString;
	private final QualifiedNameElements pQualifiedName;
	private final MetamodelElements pMetamodel;
	private final ValidIDElements pValidID;
	private final KEYWORDElements pKEYWORD;
	private final VariableDeclarationElements pVariableDeclaration;
	private final TerminalRule tSTRING;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MappingGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pMappingModel = new MappingModelElements();
		this.pSourceMetamodel = new SourceMetamodelElements();
		this.pTargetMetamodel = new TargetMetamodelElements();
		this.pMappingRule = new MappingRuleElements();
		this.pHelperStatement = new HelperStatementElements();
		this.eOperator = new OperatorElements();
		this.pEString = new EStringElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pMetamodel = new MetamodelElements();
		this.pValidID = new ValidIDElements();
		this.pKEYWORD = new KEYWORDElements();
		this.pVariableDeclaration = new VariableDeclarationElements();
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mapping.Mapping.STRING");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mapping.Mapping".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//MappingModel returns MappingModel:
	//    'MappingModel' name= STRING
	//    'SourceMetamodels' '{' SourceMetamodels+=SourceMetamodel ( "," SourceMetamodels+=SourceMetamodel)* '}'
	//    ('MainSourceMetamodel' MainSourceMetamodel=[SourceMetamodel|QualifiedName])?
	//    'TargetMetamodels' '{' TargetMetamodels+=TargetMetamodel ( "," TargetMetamodels+=TargetMetamodel)* '}'
	//    ('MappingRules''{' Rules+=MappingRule ( ";" Rules+=MappingRule)* '}' )?
	//    ;
	public MappingModelElements getMappingModelAccess() {
		return pMappingModel;
	}
	
	public ParserRule getMappingModelRule() {
		return getMappingModelAccess().getRule();
	}
	
	//SourceMetamodel returns SourceMetamodel:
	//    {SourceMetamodel}
	//    name=STRING?
	//        (model=[ecore::EPackage|EString])
	//    ;
	public SourceMetamodelElements getSourceMetamodelAccess() {
		return pSourceMetamodel;
	}
	
	public ParserRule getSourceMetamodelRule() {
		return getSourceMetamodelAccess().getRule();
	}
	
	//TargetMetamodel returns TargetMetamodel:
	//    {TargetMetamodel}
	//    name=STRING?
	//        (model=[ecore::EPackage|EString])
	//    ;
	public TargetMetamodelElements getTargetMetamodelAccess() {
		return pTargetMetamodel;
	}
	
	public ParserRule getTargetMetamodelRule() {
		return getTargetMetamodelAccess().getRule();
	}
	
	//MappingRule returns MappingRule:
	//    {MappingRule}
	//    ('MappingRule')?
	//    name=STRING?
	//         var = VariableDeclaration?
	//        ('identifier' identifier = STRING)?
	//        ((('source' (source=[ecore::EObject|QualifiedName]) | variable=[VariableDeclaration|ID])) ('::' EEnumLiteral=[ecore::EEnumLiteral])?)?
	//        ('target' target=[ecore::EObject|QualifiedName])?
	//        ('operator' operator=Operator)?
	//        ('condition' condition=STRING)?
	//        ('comment' comment=EString)?
	//        ('{' ChildRules+=MappingRule ( ";" ChildRules+=MappingRule)* '}' )?
	//        ('{' ChildHelpers+=HelperStatement ( ";" ChildHelpers+=HelperStatement)* '}' )?
	//    ;
	public MappingRuleElements getMappingRuleAccess() {
		return pMappingRule;
	}
	
	public ParserRule getMappingRuleRule() {
		return getMappingRuleAccess().getRule();
	}
	
	//HelperStatement returns HelperStatement:
	//{HelperStatement}
	//('HelperStatement')?
	//    ('statement' statement=STRING)
	//    ('{' ChildRules+=MappingRule ( "," ChildRules+=MappingRule)* '}' )?
	//    ('{' ChildHelpers+=HelperStatement ( "," ChildHelpers+=HelperStatement)* '}' )?
	//;
	public HelperStatementElements getHelperStatementAccess() {
		return pHelperStatement;
	}
	
	public ParserRule getHelperStatementRule() {
		return getHelperStatementAccess().getRule();
	}
	
	//enum Operator returns Operator:
	//            assign = 'assign' | add = 'add';
	public OperatorElements getOperatorAccess() {
		return eOperator;
	}
	
	public EnumRule getOperatorRule() {
		return getOperatorAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID
	//;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//QualifiedName:
	//    ValidID ('.' ValidID)*
	//;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//Metamodel returns Metamodel:
	//    SourceMetamodel | TargetMetamodel
	//;
	public MetamodelElements getMetamodelAccess() {
		return pMetamodel;
	}
	
	public ParserRule getMetamodelRule() {
		return getMetamodelAccess().getRule();
	}
	
	//ValidID: EString | KEYWORD;
	public ValidIDElements getValidIDAccess() {
		return pValidID;
	}
	
	public ParserRule getValidIDRule() {
		return getValidIDAccess().getRule();
	}
	
	//KEYWORD: 'source'|'target';
	public KEYWORDElements getKEYWORDAccess() {
		return pKEYWORD;
	}
	
	public ParserRule getKEYWORDRule() {
		return getKEYWORDAccess().getRule();
	}
	
	//VariableDeclaration:
	//    {VariableDeclaration}
	//    'var' name=ID value=STRING
	//    ;
	public VariableDeclarationElements getVariableDeclarationAccess() {
		return pVariableDeclaration;
	}
	
	public ParserRule getVariableDeclarationRule() {
		return getVariableDeclarationAccess().getRule();
	}
	
	// @Override
	//terminal STRING:
	//        '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"'
	//;
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
